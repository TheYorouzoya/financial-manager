spring:
  application:
    name: financialmanager
    mode: test

  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 60000


  config:
    import: optional:file:.env[.properties]
  

  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/familyfinance}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: ${JPA_FORMAT_SQL:true}


  security:
    oauth2:
      client:
        registration:
          github:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            scope: 
              - read:user
              - user:email

    jwt:
      public-key-location: ${PUBLIC_KEY_PATH}
      private-key-location: ${PRIVATE_KEY_PATH}
      expiration-ms: ${JWT_EXPIRATION_MS:3600000}
      refresh-token-expiration-ms: ${REFRESH_TOKEN_EXPIRATION_MS:604800000}


logging:
  level:
    # org:
    #   springframework: ${LOG_LEVEL_SPRING:INFO}
    #   springframework.security: DEBUG
    #   hibernate:
    #     SQL: ${LOG_LEVEL_HIBERNATE_SQL:DEBUG}
    #     type:
    #       descriptor:
    #         sql:
    #           BasicBinder: ${LOG_LEVEL_HIBERNATE_PARAMS:TRACE}

    com:
      familyfinance: ${LOG_LEVEL_APP:DEBUG}


management:
  endpoints:
    web:
      exposure:
        include: health, info, caches
  endpoint:
    caches:
      access: READ_ONLY


server:
  port: ${SERVER_PORT:8080}
  servlet:
    session:
      cookie:
        same-site: lax
